name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: package
        run: echo "packaging"
      - name: Download repo
        uses: actions/checkout@v4
      - name: Install JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "adopt"
      - name: Construir con Maven
        run: mvn clean package -DskipTests
 
      - name: Keep the jar file for deployment
        uses: actions/upload-artifact@v4
        with:
          name: moviecards-java
          path: "${{ github.workspace }}/target/*.jar"

  test:
    needs: build
    if: github.ref=='refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download repository
        uses: actions/checkout@v4

      - name: Instalar JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Install Chrome and ChromeDriver for end to end tests
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt --fix-broken install -y
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          curl -L -o chromedriver.zip https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver.zip
          chmod +x chromedriver
          sudo mv chromedriver /usr/local/bin/

      - name: Run the applicaton for end to end tests
        run: mvn spring-boot:run & sleep 60

      - name: Run unit tests
        run: mvn clean verify

  qa:
    needs: test
    runs-on: self-hosted
    continue-on-error: true
    steps:
      - name: Download reporsitory
        uses: actions/checkout@v4

      - name: Install JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "adopt"

      - name: build
        run: mvn clean package -DskipTests

      - name: Check quality
        run: |
          mvn sonar:sonar \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.qualitygate.wait=true\
            -Dsonar.login=admin -Dsonar.password=adminadmin


  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref=='refs/heads/main'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
      - name: Manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.TOKEN }}
          approvers: danrodgar
      
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: moviecards-java
      
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'moviecards-danrodgar'
          slot-name: 'Production'
          package: '*.jar'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_ADC2FE995C42497ABE839889EDD25B52 }}